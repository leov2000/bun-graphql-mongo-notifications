// @generated by protobuf-ts 2.9.6 with parameter server_grpc1,client_grpc1,long_type_string
// @generated from protobuf file "notifications.proto" (package "notification", syntax proto3)
// tslint:disable
import { NotificationService } from "./notifications";
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { GroupNotificationsRequest } from "./notifications";
import type { Notification } from "./notifications";
import type { UserRequest } from "./notifications";
import type { SleepNotificationResponse } from "./notifications";
import type { SleepNotificationRequest } from "./notifications";
import type { RemoveGroupMemberResponse } from "./notifications";
import type { CreateGroupResponse } from "./notifications";
import type { CreateGroupRequest } from "./notifications";
import type { AddGroupMemberResponse } from "./notifications";
import type { GroupMemberRequest } from "./notifications";
import type { SendGroupNotificationResponse } from "./notifications";
import type { SendGroupNotificationRequest } from "./notifications";
import type { SendNotificationResponse } from "./notifications";
import type { SendNotificationRequest } from "./notifications";
import type { GetGroupNotificationsResponse } from "./notifications";
import type { GetGroupNotificationsRequest } from "./notifications";
import type { GetGroupMembersResponse } from "./notifications";
import type { GetGroupMembersRequest } from "./notifications";
import type { GetUserNotificationsResponse } from "./notifications";
import type { GetUserNotificationsRequest } from "./notifications";
import * as grpc from "@grpc/grpc-js";
/**
 * @generated from protobuf service notification.NotificationService
 */
export interface INotificationServiceClient {
    /**
     * @generated from protobuf rpc: GetUserNotifications(notification.GetUserNotificationsRequest) returns (notification.GetUserNotificationsResponse);
     */
    getUserNotifications(input: GetUserNotificationsRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetUserNotificationsResponse) => void): grpc.ClientUnaryCall;
    getUserNotifications(input: GetUserNotificationsRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: GetUserNotificationsResponse) => void): grpc.ClientUnaryCall;
    getUserNotifications(input: GetUserNotificationsRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetUserNotificationsResponse) => void): grpc.ClientUnaryCall;
    getUserNotifications(input: GetUserNotificationsRequest, callback: (err: grpc.ServiceError | null, value?: GetUserNotificationsResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: GetGroupMembers(notification.GetGroupMembersRequest) returns (notification.GetGroupMembersResponse);
     */
    getGroupMembers(input: GetGroupMembersRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetGroupMembersResponse) => void): grpc.ClientUnaryCall;
    getGroupMembers(input: GetGroupMembersRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: GetGroupMembersResponse) => void): grpc.ClientUnaryCall;
    getGroupMembers(input: GetGroupMembersRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetGroupMembersResponse) => void): grpc.ClientUnaryCall;
    getGroupMembers(input: GetGroupMembersRequest, callback: (err: grpc.ServiceError | null, value?: GetGroupMembersResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: GetGroupNotifications(notification.GetGroupNotificationsRequest) returns (notification.GetGroupNotificationsResponse);
     */
    getGroupNotifications(input: GetGroupNotificationsRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetGroupNotificationsResponse) => void): grpc.ClientUnaryCall;
    getGroupNotifications(input: GetGroupNotificationsRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: GetGroupNotificationsResponse) => void): grpc.ClientUnaryCall;
    getGroupNotifications(input: GetGroupNotificationsRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: GetGroupNotificationsResponse) => void): grpc.ClientUnaryCall;
    getGroupNotifications(input: GetGroupNotificationsRequest, callback: (err: grpc.ServiceError | null, value?: GetGroupNotificationsResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: SendNotification(notification.SendNotificationRequest) returns (notification.SendNotificationResponse);
     */
    sendNotification(input: SendNotificationRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: SendNotificationResponse) => void): grpc.ClientUnaryCall;
    sendNotification(input: SendNotificationRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: SendNotificationResponse) => void): grpc.ClientUnaryCall;
    sendNotification(input: SendNotificationRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: SendNotificationResponse) => void): grpc.ClientUnaryCall;
    sendNotification(input: SendNotificationRequest, callback: (err: grpc.ServiceError | null, value?: SendNotificationResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: SendGroupNotification(notification.SendGroupNotificationRequest) returns (notification.SendGroupNotificationResponse);
     */
    sendGroupNotification(input: SendGroupNotificationRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: SendGroupNotificationResponse) => void): grpc.ClientUnaryCall;
    sendGroupNotification(input: SendGroupNotificationRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: SendGroupNotificationResponse) => void): grpc.ClientUnaryCall;
    sendGroupNotification(input: SendGroupNotificationRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: SendGroupNotificationResponse) => void): grpc.ClientUnaryCall;
    sendGroupNotification(input: SendGroupNotificationRequest, callback: (err: grpc.ServiceError | null, value?: SendGroupNotificationResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: AddGroupMember(notification.GroupMemberRequest) returns (notification.AddGroupMemberResponse);
     */
    addGroupMember(input: GroupMemberRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: AddGroupMemberResponse) => void): grpc.ClientUnaryCall;
    addGroupMember(input: GroupMemberRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: AddGroupMemberResponse) => void): grpc.ClientUnaryCall;
    addGroupMember(input: GroupMemberRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: AddGroupMemberResponse) => void): grpc.ClientUnaryCall;
    addGroupMember(input: GroupMemberRequest, callback: (err: grpc.ServiceError | null, value?: AddGroupMemberResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: CreateGroup(notification.CreateGroupRequest) returns (notification.CreateGroupResponse);
     */
    createGroup(input: CreateGroupRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreateGroupResponse) => void): grpc.ClientUnaryCall;
    createGroup(input: CreateGroupRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: CreateGroupResponse) => void): grpc.ClientUnaryCall;
    createGroup(input: CreateGroupRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: CreateGroupResponse) => void): grpc.ClientUnaryCall;
    createGroup(input: CreateGroupRequest, callback: (err: grpc.ServiceError | null, value?: CreateGroupResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: RemoveGroupMember(notification.GroupMemberRequest) returns (notification.RemoveGroupMemberResponse);
     */
    removeGroupMember(input: GroupMemberRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RemoveGroupMemberResponse) => void): grpc.ClientUnaryCall;
    removeGroupMember(input: GroupMemberRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: RemoveGroupMemberResponse) => void): grpc.ClientUnaryCall;
    removeGroupMember(input: GroupMemberRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: RemoveGroupMemberResponse) => void): grpc.ClientUnaryCall;
    removeGroupMember(input: GroupMemberRequest, callback: (err: grpc.ServiceError | null, value?: RemoveGroupMemberResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: SleepNotification(notification.SleepNotificationRequest) returns (notification.SleepNotificationResponse);
     */
    sleepNotification(input: SleepNotificationRequest, metadata: grpc.Metadata, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: SleepNotificationResponse) => void): grpc.ClientUnaryCall;
    sleepNotification(input: SleepNotificationRequest, metadata: grpc.Metadata, callback: (err: grpc.ServiceError | null, value?: SleepNotificationResponse) => void): grpc.ClientUnaryCall;
    sleepNotification(input: SleepNotificationRequest, options: grpc.CallOptions, callback: (err: grpc.ServiceError | null, value?: SleepNotificationResponse) => void): grpc.ClientUnaryCall;
    sleepNotification(input: SleepNotificationRequest, callback: (err: grpc.ServiceError | null, value?: SleepNotificationResponse) => void): grpc.ClientUnaryCall;
    /**
     * @generated from protobuf rpc: SubscribeToUserNotifications(notification.UserRequest) returns (stream notification.Notification);
     */
    subscribeToUserNotifications(input: UserRequest, metadata?: grpc.Metadata, options?: grpc.CallOptions): grpc.ClientReadableStream<Notification>;
    subscribeToUserNotifications(input: UserRequest, options?: grpc.CallOptions): grpc.ClientReadableStream<Notification>;
    /**
     * @generated from protobuf rpc: SubscribeToGroupNotifications(notification.GroupNotificationsRequest) returns (stream notification.Notification);
     */
    subscribeToGroupNotifications(input: GroupNotificationsRequest, metadata?: grpc.Metadata, options?: grpc.CallOptions): grpc.ClientReadableStream<Notification>;
    subscribeToGroupNotifications(input: GroupNotificationsRequest, options?: grpc.CallOptions): grpc.ClientReadableStream<Notification>;
}
/**
 * @generated from protobuf service notification.NotificationService
 */
export class NotificationServiceClient extends grpc.Client implements INotificationServiceClient {
    private readonly _binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions>;
    constructor(address: string, credentials: grpc.ChannelCredentials, options: grpc.ClientOptions = {}, binaryOptions: Partial<BinaryReadOptions & BinaryWriteOptions> = {}) {
        super(address, credentials, options);
        this._binaryOptions = binaryOptions;
    }
    /**
     * @generated from protobuf rpc: GetUserNotifications(notification.GetUserNotificationsRequest) returns (notification.GetUserNotificationsResponse);
     */
    getUserNotifications(input: GetUserNotificationsRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetUserNotificationsResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetUserNotificationsResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: GetUserNotificationsResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[0];
        return this.makeUnaryRequest<GetUserNotificationsRequest, GetUserNotificationsResponse>(`/${NotificationService.typeName}/${method.name}`, (value: GetUserNotificationsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): GetUserNotificationsResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: GetGroupMembers(notification.GetGroupMembersRequest) returns (notification.GetGroupMembersResponse);
     */
    getGroupMembers(input: GetGroupMembersRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetGroupMembersResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetGroupMembersResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: GetGroupMembersResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[1];
        return this.makeUnaryRequest<GetGroupMembersRequest, GetGroupMembersResponse>(`/${NotificationService.typeName}/${method.name}`, (value: GetGroupMembersRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): GetGroupMembersResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: GetGroupNotifications(notification.GetGroupNotificationsRequest) returns (notification.GetGroupNotificationsResponse);
     */
    getGroupNotifications(input: GetGroupNotificationsRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetGroupNotificationsResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: GetGroupNotificationsResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: GetGroupNotificationsResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[2];
        return this.makeUnaryRequest<GetGroupNotificationsRequest, GetGroupNotificationsResponse>(`/${NotificationService.typeName}/${method.name}`, (value: GetGroupNotificationsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): GetGroupNotificationsResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: SendNotification(notification.SendNotificationRequest) returns (notification.SendNotificationResponse);
     */
    sendNotification(input: SendNotificationRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: SendNotificationResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: SendNotificationResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: SendNotificationResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[3];
        return this.makeUnaryRequest<SendNotificationRequest, SendNotificationResponse>(`/${NotificationService.typeName}/${method.name}`, (value: SendNotificationRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): SendNotificationResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: SendGroupNotification(notification.SendGroupNotificationRequest) returns (notification.SendGroupNotificationResponse);
     */
    sendGroupNotification(input: SendGroupNotificationRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: SendGroupNotificationResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: SendGroupNotificationResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: SendGroupNotificationResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[4];
        return this.makeUnaryRequest<SendGroupNotificationRequest, SendGroupNotificationResponse>(`/${NotificationService.typeName}/${method.name}`, (value: SendGroupNotificationRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): SendGroupNotificationResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: AddGroupMember(notification.GroupMemberRequest) returns (notification.AddGroupMemberResponse);
     */
    addGroupMember(input: GroupMemberRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: AddGroupMemberResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: AddGroupMemberResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: AddGroupMemberResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[5];
        return this.makeUnaryRequest<GroupMemberRequest, AddGroupMemberResponse>(`/${NotificationService.typeName}/${method.name}`, (value: GroupMemberRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): AddGroupMemberResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: CreateGroup(notification.CreateGroupRequest) returns (notification.CreateGroupResponse);
     */
    createGroup(input: CreateGroupRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreateGroupResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: CreateGroupResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: CreateGroupResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[6];
        return this.makeUnaryRequest<CreateGroupRequest, CreateGroupResponse>(`/${NotificationService.typeName}/${method.name}`, (value: CreateGroupRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): CreateGroupResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: RemoveGroupMember(notification.GroupMemberRequest) returns (notification.RemoveGroupMemberResponse);
     */
    removeGroupMember(input: GroupMemberRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RemoveGroupMemberResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: RemoveGroupMemberResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: RemoveGroupMemberResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[7];
        return this.makeUnaryRequest<GroupMemberRequest, RemoveGroupMemberResponse>(`/${NotificationService.typeName}/${method.name}`, (value: GroupMemberRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): RemoveGroupMemberResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: SleepNotification(notification.SleepNotificationRequest) returns (notification.SleepNotificationResponse);
     */
    sleepNotification(input: SleepNotificationRequest, metadata: grpc.Metadata | grpc.CallOptions | ((err: grpc.ServiceError | null, value?: SleepNotificationResponse) => void), options?: grpc.CallOptions | ((err: grpc.ServiceError | null, value?: SleepNotificationResponse) => void), callback?: ((err: grpc.ServiceError | null, value?: SleepNotificationResponse) => void)): grpc.ClientUnaryCall {
        const method = NotificationService.methods[8];
        return this.makeUnaryRequest<SleepNotificationRequest, SleepNotificationResponse>(`/${NotificationService.typeName}/${method.name}`, (value: SleepNotificationRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): SleepNotificationResponse => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), (options as any), (callback as any));
    }
    /**
     * @generated from protobuf rpc: SubscribeToUserNotifications(notification.UserRequest) returns (stream notification.Notification);
     */
    subscribeToUserNotifications(input: UserRequest, metadata?: grpc.Metadata | grpc.CallOptions, options?: grpc.CallOptions): grpc.ClientReadableStream<Notification> {
        const method = NotificationService.methods[9];
        return this.makeServerStreamRequest<UserRequest, Notification>(`/${NotificationService.typeName}/${method.name}`, (value: UserRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): Notification => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), options);
    }
    /**
     * @generated from protobuf rpc: SubscribeToGroupNotifications(notification.GroupNotificationsRequest) returns (stream notification.Notification);
     */
    subscribeToGroupNotifications(input: GroupNotificationsRequest, metadata?: grpc.Metadata | grpc.CallOptions, options?: grpc.CallOptions): grpc.ClientReadableStream<Notification> {
        const method = NotificationService.methods[10];
        return this.makeServerStreamRequest<GroupNotificationsRequest, Notification>(`/${NotificationService.typeName}/${method.name}`, (value: GroupNotificationsRequest): Buffer => Buffer.from(method.I.toBinary(value, this._binaryOptions)), (value: Buffer): Notification => method.O.fromBinary(value, this._binaryOptions), input, (metadata as any), options);
    }
}
